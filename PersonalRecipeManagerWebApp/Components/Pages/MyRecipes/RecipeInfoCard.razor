@page "/myrecipes/recipeinfo/{RecipeId}"
@rendermode InteractiveServer
@using Microsoft.EntityFrameworkCore
@using PersonalRecipeManagerWebApp.Models.Ingredients
@using PersonalRecipeManagerWebApp.Models.Equipment
@using PersonalRecipeManagerWebApp.Services
@using PersonalRecipeManagerWebApp.Data
@inject IHandleInteractionService InteractionService
@inject DialogService dialogService
@inject NavigationManager NavigationManager

<PageTitle>Recipe Info Card</PageTitle>
@if (isLoading)
{
    <p>Loading...</p>
}
else
{
    <div class="text-center">
        <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" class="text-center border-2 border-grey-100 rounded-lg"
                        JustifyContent="JustifyContent.SpaceAround">
            <RadzenStack Gap="0" class="rz-text-truncate">
                <RadzenText TextStyle="TextStyle.Overline" class="rz-mt-2 rz-my-0" Style="color: var(--rz-text-tertiary-color);">Name</RadzenText>
                <RadzenText TextStyle="TextStyle.Body1" class="rz-text-truncate"><b>@(recipe.Name)</b></RadzenText>
            </RadzenStack>
            <RadzenStack Gap="0" class="rz-text-truncate">
                <RadzenText TextStyle="TextStyle.Overline" class="rz-mt-2 rz-my-0" Style="color: var(--rz-text-tertiary-color);">Difficulty</RadzenText>
                <RadzenText TextStyle="TextStyle.Body1" class="rz-text-truncate"><b>@(recipe.Difficulty)</b></RadzenText>
            </RadzenStack>
            <RadzenStack Gap="0" class="rz-text-truncate">
                <RadzenText TextStyle="TextStyle.Overline" class="rz-mt-2 rz-my-0" Style="color: var(--rz-text-tertiary-color);">Time</RadzenText>
                <RadzenText TextStyle="TextStyle.Body1" class="rz-text-truncate"><b>@(recipe.Time)</b></RadzenText>
            </RadzenStack>
            <RadzenStack Gap="0" class="rz-text-truncate">
                <RadzenText TextStyle="TextStyle.Overline" class="rz-mt-2 rz-my-0" Style="color: var(--rz-text-tertiary-color);">Cost</RadzenText>
                <RadzenText TextStyle="TextStyle.Body1" class="rz-text-truncate"><b>$@(recipe.Cost)</b></RadzenText>
            </RadzenStack>
        </RadzenStack>
    </div>
    <div>
        <div class="mt-4 space-y-8">
            <RadzenStack  JustifyContent="JustifyContent.Start" Orientation="Orientation.Horizontal" Gap="12px">
                <RadzenStack Orientation="Orientation.Vertical" Gap="2px">
                    <RadzenText class="font-bold text-blue-600 font-mono">Ingredients:</RadzenText>
                    <ul class="list-disc pl-10">
                    @foreach(RecipeIngredientsViewModel item in recipeIngredients)
                    {
                        <li>@item.Quantity @item.UnitOfMeasurement of @item.Name</li>
                    }
                    </ul>
                </RadzenStack>
                
                <RadzenStack Orientation="Orientation.Vertical" Gap="2px">
                    <RadzenText class="font-bold text-blue-600 font-mono">Equipment:</RadzenText>
                    <ul class="list-disc pl-10">
                    @foreach (RecipeEquipmentViewModel item in recipeEquipment)
                    {
                        <li>@item.Quantity @item.Name</li>
                    }
                    </ul>
                </RadzenStack>
            </RadzenStack>
            <RadzenText class="font-bold text-blue-600 font-mono">Instructions</RadzenText>
            <RadzenText>@recipe.Instructions</RadzenText>
            @*TODO: ADD INSTRUCTIONS TO DB AND DISPLAY ON RECIPE PAGE
                       LOOK INTO MORE UI IMPROVEMENTS *@
        </div>
    </div>
    <RadzenStack Visible="@ShowClose" Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.End" Gap="0.5rem">
        <RadzenButton Click="@((args) => dialogService.Close(true))" Variant="Variant.Flat" Text="Close" Style="width: 120px" />
    </RadzenStack>










            @* <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.SpaceBetween" AlignItems="AlignItems.Center">
                <RadzenText TextStyle="TextStyle.Subtitle1" class="rz-m-0">@recipe.Name Cost</RadzenText>
                <RadzenBadge BadgeStyle="BadgeStyle.Secondary" Text=@($"{String.Format(new System.Globalization.CultureInfo("en-US"), "{0:C}", recipe.Cost)}") />
            </RadzenStack>
            <RadzenStack Orientation="Orientation.Vertical" JustifyContent="JustifyContent.SpaceBetween" AlignItems="AlignItems.Center">
                <RadzenDataGrid @ref="ingredientsGrid"
                                AllowPaging="true" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" TItem="RecipeIngredientsViewModel"
                                Data="@(recipeIngredients)" ColumnWidth="200px" Density="Density.Compact" AllowAlternatingRows="false">
                    <Columns>
                        <RadzenDataGridColumn TItem="RecipeIngredientsViewModel" Width="80px" Property="Name" Title="Name">
                            <EditTemplate Context="recipeIngredientsDto">
                                <RadzenDropDown @bind-Value="recipeIngredientsDto.Id" Data="@allIngredients"
                                 ValueProperty="Id" TextProperty="Name" Style="width:200px; display: block" Name="Name" aria-label="Enter Name" />
                                <RadzenRequiredValidator Text="Name is required" Component="Name" Popup="true" />
                            </EditTemplate>
                        </RadzenDataGridColumn>
                        <RadzenDataGridColumn TItem="RecipeIngredientsViewModel" Width="30px" Property="Quantity" Title="Quantity" >
                            <EditTemplate Context="recipeIngredientsDto">
                                <RadzenNumeric @bind-Value="recipeIngredientsDto.Quantity" Style="width:100%" 
                                               InputAttributes="@(new Dictionary<string,object>(){ { "aria-label", "Select Quantity" }})" />
                            </EditTemplate>
                        </RadzenDataGridColumn>
                        <RadzenDataGridColumn TItem="RecipeIngredientsViewModel" Width="60px" Property="UnitOfMeasurement" Title="Units" >
                            <EditTemplate Context="recipeIngredientsDto">
                                <RadzenTextBox @bind-Value="recipeIngredientsDto.UnitOfMeasurement" Style="width:200px; display: block" 
                                               Name="UnitOfMeasurement" aria-label="Enter Unit Of Measurement" />
                                <RadzenRequiredValidator Text="Unit Of Measurement is required" Component="UnitOfMeasurement" Popup="true" />
                            </EditTemplate>
                        </RadzenDataGridColumn>
                    </Columns>
                </RadzenDataGrid>

                <RadzenDataGrid @ref="equipmentGrid" AllowPaging="true"
                                FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" Data="@(recipeEquipment)" ColumnWidth="200px"
                                Density="Density.Compact" AllowAlternatingRows="false" TItem="RecipeEquipmentViewModel" >
                    <Columns>
                        <RadzenDataGridColumn TItem="RecipeEquipmentViewModel" Width="80px" Property="Name" Title="Name">
                            <EditTemplate Context="recipeEquipmentDto">
                                <RadzenDropDown @bind-Value="recipeEquipmentDto.Id" Data="@allEquipment"
                                 ValueProperty="Id" TextProperty="Name" Style="width:200px; display: block" Name="Name" aria-label="Enter Name" />
                                <RadzenRequiredValidator Text="Name is required" Component="Name" Popup="true" />
                            </EditTemplate>
                        </RadzenDataGridColumn>
                        <RadzenDataGridColumn TItem="RecipeEquipmentViewModel" Width="30px" Property="Quantity" Title="Quantity">
                            <EditTemplate Context="recipeEquipmentDto">
                                <RadzenNumeric @bind-Value="recipeEquipmentDto.Quantity" Style="width:100%"
                                               InputAttributes="@(new Dictionary<string,object>(){ { "aria-label", "Select Quantity" }})" />
                            </EditTemplate>
                        </RadzenDataGridColumn>
                    </Columns>
                </RadzenDataGrid>
            </RadzenStack>
         *@
}