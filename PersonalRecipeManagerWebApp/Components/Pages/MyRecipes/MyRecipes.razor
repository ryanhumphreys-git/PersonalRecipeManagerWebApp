@page "/myrecipes"
@rendermode InteractiveServer
@using Microsoft.EntityFrameworkCore
@using PersonalRecipeManagerWebApp.Models
@using PersonalRecipeManagerWebApp.Services
@using PersonalRecipeManagerWebApp.Data
@inject IHandleInteractionService InteractionService


<PageTitle>My Recipes</PageTitle>

<h1>My Recipes</h1>

@if(recipes is null || preRecipe is null)
{
    <p>Loading...</p>
}
else
{
    <RadzenDataGrid @ref="recipeGrid" AllowFiltering="true" FilterMode="FilterMode.Simple" AllowPaging="true" PageSize="5" AllowSorting="true"
                    Data="@recipes" TItem="Recipe" EditMode="DataGridEditMode.Single"
                    FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive">
        <HeaderTemplate>
            <RadzenButton ButtonStyle="ButtonStyle.Success" Icon="add_circle" Text="Add New Recipe" Click="@OpenAddNewRecipe" />
        </HeaderTemplate>
        <Columns>
            <RadzenDataGridColumn Width="80px" TItem="Recipe" Property="Name" Title="Name">
                <EditTemplate Context="recipe">
                    <RadzenTextBox @bind-Value="recipe.Name" Style="width:100%; display: block" Name="Name" aria-label="Enter Name" />
                    <RadzenRequiredValidator Text="Name is required" Component="Name" Popup="true" />
                </EditTemplate>
            </RadzenDataGridColumn>
            <RadzenDataGridColumn Width="50px" TItem="Recipe" Property="Difficulty" Title="Difficulty" >
                <EditTemplate Context="recipe">
                    <RadzenNumeric @bind-Value="recipe.Difficulty" Style="width:100%" InputAttributes="@(new Dictionary<string,object>(){ { "aria-label", "Select Difficulty" }})"/>
                </EditTemplate>
            </RadzenDataGridColumn>
            <RadzenDataGridColumn Width="50px" TItem="Recipe"  Property="Time" Title="Time">
                <EditTemplate Context="recipe">
                    <RadzenNumeric @bind-Value="recipe.Time" Style="width:100%" InputAttributes="@(new Dictionary<string,object>(){ { "aria-label", "Select Time" }})" />
                </EditTemplate>
            </RadzenDataGridColumn>
            <RadzenDataGridColumn Width="50px" TItem="Recipe" Property="Cost" Title="Cost">
                <Template Context="recipes">
                    @String.Format(new System.Globalization.CultureInfo("en-US"), "{0:C}", recipes.Cost)
                </Template>
            </RadzenDataGridColumn>
            <RadzenDataGridColumn Width="100px" TItem="Recipe" Property="Id" Title="Recipe Details">
                <Template Context="recipe">
                    <RadzenButton ButtonStyle="ButtonStyle.Info" Variant="Variant.Flat" Shade="Shade.Lighter" Icon="info" class="rz-m-1" 
                                  Click=@(() => OpenRecipe(recipe.Id)) Text="Recipe Info" />
                </Template>
            </RadzenDataGridColumn>
            <RadzenDataGridColumn Width="50px" Context="recipe" Filterable="false" Sortable="false" TextAlign="TextAlign.Right" Frozen="true" FrozenPosition="FrozenColumnPosition.Right">
                <Template Context="recipe">
                    <RadzenButton Icon="edit" ButtonStyle="ButtonStyle.Light" Variant="Variant.Flat" Size="ButtonSize.Medium" Click="@(args => OpenEditRecipe(recipe))" @onclick:stopPropagation="true">
                    </RadzenButton>
                    <RadzenButton ButtonStyle="ButtonStyle.Danger" Icon="delete" Variant="Variant.Flat" Click="@((args) => DeleteRow(recipe))" Shade="Shade.Lighter" Size="ButtonSize.Medium" class="rz-my-1 rz-ms-1" @onclick:stopPropagation="true">
                    </RadzenButton>
                </Template>
            </RadzenDataGridColumn>
        </Columns>
    </RadzenDataGrid>
}
